# Francisco Ariel Arenas Enciso
# A01369122
# Desarrollo de la misión 5 (ciclos, bucles y figruas en pygame)


#Primero se importa pygame con el fin de tener habilitadas las herramientas necesarias para trabajar.
import pygame

#Un metodo encontrado en internet para generar colores alternos es importando random y creando una función
import random

#Para la Figura D utilizaremos a la libreria de math de python
import math

#Se crea la ventana con la que vamos a trabajar
ANCHO = 800
ALTO = 800
ventana = pygame.display.set_mode((ANCHO, ALTO))

#Se establecen los colores con los que se trabajarán
NEGRO = (0, 0, 0)
BLANCO = (255, 255, 255)
#Dentro de los colores se debe de crear una función especial para los colores aleatorios
def coloresRandom():
    colores = [(139, 0,0),
               (0, 100, 0),
               (0, 0, 139)]
    return random.choice(colores)





'''Se crea la función que dibuja la figura B (parabolas) mediante las herramientas brindadas
por pygame'''
def dibujarFiguraB():
    pygame.init()
    reloj = pygame.time.Clock()
    termina = False

    while not termina:  # Ciclo principal, MIENTRAS la variable termina sea False, el ciclo se repite automáticamente
        # Procesa los eventos que recibe
        for evento in pygame.event.get():
            if evento.type == pygame.QUIT:  # El usuario hizo click en el botón de salir
                termina = True      # Queremos terminar el ciclo

        ventana.fill(BLANCO)

        color = coloresRandom()
        colorUno = coloresRandom()
        colorDos = coloresRandom()
        colorTres = coloresRandom()
        for linea in range(40):
            linea = (linea+1)*10
            pygame.draw.line(ventana, color, (400 - linea, 400), (400, linea), 1)
            pygame.draw.line(ventana, colorUno, (400 + linea, 400), (400, linea), 1)
            pygame.draw.line(ventana, colorDos, (400 - linea, 400), (400, 800 - linea), 1)
            pygame.draw.line(ventana, colorTres, (400 + linea, 400), (400, 800 - linea), 1)

        pygame.display.flip()  # Actualiza trazos (Si no llamas a esta función, no se dibuja)
        reloj.tick(40)  # 40 fps

    # Después del ciclo principal
    pygame.quit()





'''Esta función recibe de main el total de términos que se emplearan en la sucesión dada en la tarea para aproximar el
valor de PI'''


def aproximarValorPi(terminos):
    suma = 0  # Acumulador
    for denominador in range(1, terminos + 1):
        suma += 1 / denominador ** 4

    return (90 * suma) ** 0.25


'''Esta función mediante un contador ("numeroDivisible") cuenta aquellos números cuya condición (numero % 199 == 0)
resulta cierta'''


def deteminarNumerosDivisibles():
    numeroDivisible = 0
    for numero in range(100, 1000):
        if numero % 19 == 0:
            numeroDivisible = numeroDivisible + 1
    print("Son %2d números con tres cifras los que son múltiplos de 19" % numeroDivisible)


'''Esta función mediante el uso de acumuladores relaiza cada una de las píramides solicitadas'''


def hacerPiramidesDeNumeros():
    valoresEnAumento = 0
    for numero in range(9):
        print((valoresEnAumento * 10 + numero + 1), "*", 8, "+", numero + 1, "=",
              ((valoresEnAumento * 10 + numero + 1) * 8 + (numero + 1)))
        valoresEnAumento = valoresEnAumento * 10 + numero + 1

    print("------------------------------")

    aumentoDeUno = 0
    for numero in range(9):
        print((aumentoDeUno * 10 + 1), "*", (aumentoDeUno * 10 + 1), "=",
              ((aumentoDeUno * 10 + 1) * (aumentoDeUno * 10 + 1)))
        aumentoDeUno = aumentoDeUno * 10 + 1


'''Función que controla todo el programa. Esta función será la que contenga el menú para el usuario'''
def main():
    opcion = -1
    while (opcion != 0):
        opcion = int(input('''
        -----------------------------------------------
        Misión 5. Seleccione qué quiere hacer
        1. Dibujar Dibujar cuadro y círculo
        2. Cibujar parábolas
        3. Dibujar espiral
        4. Dibujar círculos
        5. Aproximar PI
        6. Contar divisibles entre 19
        7. Imprimir pirámides de números
        0. Salir
        -----------------------------------------------
        ¿Qué desea hacer?
         '''))
        if opcion == 1:
            dibujarFiguraA()
        elif opcion == 2:
            dibujarFiguraB()
        elif opcion == 3:
            dibujarFiguraC()
        elif opcion == 4:
            dibujarFiguraD()
        elif opcion == 5:
            print("Para calcular el valor de pi se necesita saber cuantos términos se usaran en la suscesión.")
            terminos = int(input("Para ello, teclea cuántos términos deseas usar: "))
            aproximacionPi = aproximarValorPi(terminos)
            print("PI = ", aproximacionPi)
        elif opcion == 6:
            deteminarNumerosDivisibles()
        elif opcion == 7:
            hacerPiramidesDeNumeros()
        elif opcion == 0:
            print("Gracias por correr el programa")
            break


main()
